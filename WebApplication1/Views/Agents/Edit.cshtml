@model WebApplication1.Models.Agent

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit</title>
</head>
<body>
    <script src="~/Scripts/jquery-3.4.1.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Agent</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.AgentId)
    <div class="row md-2">
        @Html.LabelFor(model => model.AgentName, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-7">
            @Html.EditorFor(model => model.AgentName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AgentName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row md-2">
        @Html.LabelFor(model => model.EmailHide, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-7">
            <div class="checkbox">
                Show:   @Html.RadioButton("EmailHide", "False")
                Hide: @Html.RadioButton("EmailHide", "True")
                @Html.ValidationMessageFor(model => model.EmailHide, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="row md-2">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-7">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            @if (ViewBag.error != null)
            {
                <span class="text-danger">@ViewBag.error</span>
            }
        </div>
    </div>

    <div class="row md-2">
        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-7">
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row md-2">
        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-7">
            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row md-2">
        @Html.LabelFor(model => model.Introduction, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-7">
            @Html.EditorFor(model => model.Introduction, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Introduction, "", new { @class = "text-danger" })

        </div>
    </div>
    <div class="row md-2">
        @Html.LabelFor(model => model.isActivate, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-7">
            <div class="checkbox">
                Not Active:   @Html.RadioButton("isActivate", "False")
                Active: @Html.RadioButton("isActivate", "True")
                @Html.ValidationMessageFor(model => model.EmailHide, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.paymentId, "paymentId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("paymentId", (SelectList)(ViewContext.TempData["paymentId"] ?? ViewData["paymentId"]))
            @Html.ValidationMessageFor(model => model.paymentId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control" } })
        <div class="col-md-10">
            @Html.DropDownList("UserId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</body>
</html>
